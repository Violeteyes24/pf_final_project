// Frame frame1 = new Frame("Hello World");
        // frame1.setSize(500, 300);
        // frame1.setLocation(500, 120);
        
        // // Add a WindowListener to handle the close button click
        // frame1.addWindowListener(new WindowAdapter() {
        //     public void windowClosing(WindowEvent close) {
        //         frame1.dispose(); // Close the frame
        //     }
        // });

        // frame1.setVisible(true);
        
        // // added label I think it automatically labels the first panel
        // Label alabel = new Label("Would you like to go out with me? ");
        // alabel.setAlignment(Label.LEFT);

        // // added panel inside frame
        // Panel apanel = new Panel();
        // Button okButton = new Button("Yes");
        // Button cancelButton = new Button("yes please");
        
        // // added list
        // List alist = new List();
        // alist.add("String 1");
        // alist.add("List of strings?");  
        // alist.add("Where");  
        // alist.add("Do ");  
        // alist.add("You wanna eat?");  

        // //checkbox
        // Checkbox creamCheckbox = new Checkbox("Cream");
        // Checkbox cheeseCheckbox = new Checkbox("Cheese");

        // // choice
        // Choice aChoice = new Choice();
        // aChoice.add("gamedev");
        // aChoice.add("webdev");
        // aChoice.add("appdev");
        // aChoice.add("AI/ML");
        // aChoice.add("Cloud Engineering");
        // aChoice.add("Manager");

        // TextField emailTextField = new TextField();
        // TextField passwordTextField = new TextField();
        // passwordTextField.setEchoChar('*');

        // String userEmail = emailTextField.getText();
        // String userpassword = passwordTextField.getText();

        // TextArea txtarea = new TextArea(5, 50);
        // String txt = txtarea.getText();

        //  // nvm, here is the chronological order for everything
        // apanel.add(alabel);
        // apanel.add(okButton);
        // apanel.add(cancelButton);
        // apanel.add(alist);
        // apanel.add(creamCheckbox);
        // apanel.add(cheeseCheckbox);
        // apanel.add(aChoice);
        // apanel.add(emailTextField);
        // apanel.add(passwordTextField);
        // apanel.add(txtarea);
        // // called the panel from frame
        // frame1.add(apanel);
=======================================================================
import javax.swing.*;
import java.awt.*;

public class DatingProfile extends JFrame {

    public DatingProfile(String name, int age, String location, String interests, String bio) {
        setTitle("Dating Profile");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel profilePanel = new JPanel();
        profilePanel.setLayout(new BoxLayout(profilePanel, BoxLayout.Y_AXIS));
        profilePanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        JLabel nameLabel = new JLabel("Name: " + name);
        JLabel ageLabel = new JLabel("Age: " + age);
        JLabel locationLabel = new JLabel("Location: " + location);
        JLabel interestsLabel = new JLabel("Interests: " + interests);
        JLabel bioLabel = new JLabel("Biography: " + bio);

        // Center text
        nameLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        ageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        locationLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        interestsLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        bioLabel.setAlignmentX(Component.CENTER_ALIGNMENT);

        profilePanel.add(nameLabel);
        profilePanel.add(ageLabel);
        profilePanel.add(locationLabel);
        profilePanel.add(interestsLabel);
        profilePanel.add(bioLabel);

        // Add buttons
        JButton startMatchingButton = new JButton("Start Matching");
        JButton homepageButton = new JButton("Homepage");

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));
        buttonPanel.add(startMatchingButton);
        buttonPanel.add(homepageButton);

        // Set layout for the frame
        setLayout(new BorderLayout());

        // Use GridBagLayout for centering the profilePanel
        JPanel centerPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        centerPanel.add(profilePanel, gbc);

        add(centerPanel, BorderLayout.CENTER);
        add(buttonPanel, BorderLayout.SOUTH);

        // Set the size of the frame
        setSize(400, 400);

        // Center the frame on the screen
        setLocationRelativeTo(null);

        // Make the frame visible
        setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new DatingProfile(
                "Zach",
                60,
                "Sa Puso Mo",
                "Coding, Genshin Impact",
                "I have many ladies"
        ));
    }
}
============================================



// JFrame email_validator;
//                 email_validator = new JFrame();
//                 final String email_var = (String)email.getText();
//                 if (!email_var.equals(email_var) && email_var.equals("@")){
//                     JOptionPane.showMessageDialog(email_validator,"Please enter a valid email");
//                     // setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                 }


===============================================

// Check login credentials
                isLoginSuccessful = true; // Replace with your actual login check logic

                if (isLoginSuccessful) {
                    JOptionPane.showMessageDialog(sign_in_form.this, "Account created!");
                    loginobj.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(sign_in_form.this, "Account not created");
                }


public static boolean loginSuccessful = false;

    public static boolean isLoginSuccessful() {
        return loginSuccessful;
    }